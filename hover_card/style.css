*,
*::after,
*::before {
	/* so that size of elemnt represent their total size
	 * that is the part enclosed in their border */
	box-sizing: border-box;

	/* To prevent element taking their default values of
	 * these and cause unexpected behviour */
	padding: 0;
	margin: 0;

	/* Every property of evry element has a transition */
	transition: 0.3s;
}

body {
	background: #0f7;
	font-family: poppins, sans-serif;
	/* Google fonts included in html */
}

.container {
	/* Must for hover card parents position mustmbe set */
	/* somehow if you don't want absolute position use relative */
	/* static not allowed */
	position: absolute;

	width: 360px;

	/* positioning stuff keep it to liking */
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.visible,
.hover {
	/* Eye candy */
	background: #fff;
	padding: 24px;

	border-radius: 5px;
	box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.42);
}

.heading {
	font-size: 36px;
	font-weight: 600;
	border-bottom: 1px dashed grey;
}

.summary {
	padding-top: 16px;
}

.summary::first-letter,
.hover::first-letter {
	/* Eye candy */
	text-transform: uppercase;
}

/* initial style */
.hover {
	/* sets position relative to parent(position not static) */
	/* percentage denote parent size */
	position: absolute;
	top: 100%;
	left: 50%;

	/* percentage denote element size in transform*/
	transform: translateX(-50%);
	opacity: 0;

	/* disable hover effects when invisible */
	pointer-events: none;
	width: 93%;
}

/* parent:hover .hover */
/* final style */
.container:hover .hover {
	opacity: 1;
	top: 50%;
}


@media screen and (min-width: 768px) {
	.container {
		transform: scale(1.5) translate(-37.5%, -37.5%);
	}
}
